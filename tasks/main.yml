#0 Common install by OS 
- debug:
    msg: "Will install components on ansible_os_family:{{ansible_os_family}},ansible_distribution:{{ ansible_distribution }}, ansible_distribution_major_version: {{ ansible_distribution_major_version }}"
  
- include: "{{ansible_os_family}}.yml"
  
- name: Updatedb for mlocate
  shell: updatedb

#2 Pip install
- block:
  - name: pip upgrade(python2 support latest pip version is 20.3.4)
    shell: python{{ansible_python.version.major}} -m pip install -U "pip < 21.0"
    failed_when: False
    
  - name: Install PyMySQL on pip2
    pip:
      name: PyMySQL
      version: 0.10.1
      extra_args: "-U"
      executable: pip2
    when: ansible_os_family == "RedHat" and (ansible_distribution_major_version == '7' or ansible_distribution_major_version == '2')
    
  - name: Install pex requirements module
    pip:
      name: pexpect
      extra_args: "-U"
    register: pex_install_result
    failed_when: False

  - name: Install pymysql requirements module
    pip:
      name: PyMySQL
      extra_args: "-U"
    register: mysql_install_result
    failed_when: False
  when: common_install_python_modules

- debug: 
    msg: "{% if pex_install_result.msg is defined %} {{pex_install_result.msg}} {% endif %}"

- debug: 
    msg: "{% if mysql_install_result.msg is defined %} {{mysql_install_result.msg}} {% endif %}"

#3 Tool install
- name: Install tools
  include_tasks: tools_{{item}}.yml
  with_items: "{{common_install_tools}}"
  when: common_install_tools is defined and common_install_tools is not none and common_install_tools != "" and common_install_tools[0]!= ""
 
#4 Configure
- name: Create common folder
  file:
    path: '/data/{{item}}'
    state: directory
    recurse: yes
    mode: '0755'
  with_items:
    - logs
    - config
    - cert
    - wwwroot
    - apps

- block:
  - name: set a regular hostname, remove "."
    shell: get_hostname=$(hostname);echo ${get_hostname%%.*}
    register: common_get_hostname
  - hostname:
      name: "{{common_get_hostname.stdout}}"

# install docker
- block:
  - name: Create Docker user
    user:
      name: docker 
      shell: /user/sbin/nologin
      
  - name: Install Docker Compose
    shell: |
      curl -L "https://github.com/docker/compose/releases/download/{{common_compose_version}}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose
      ln -sf /usr/local/bin/docker-compose  /usr/bin
      
  - name: Started and enable Docker
    service:
      name: docker 
      enabled: yes
      state: restarted

  - name: Create an network for all application
    shell: docker network create {{common_docker_addnetwork}}
    failed_when: False
    
  - name: Get Docker Gateway
    shell: ip route show | grep docker0 | awk '{print $9}'
    register: common_docker_gateway

  - name: Check Docker Version
    shell: sudo sh -c "docker -v 1>> /data/logs/install_version.txt"
  when: common_install_docker
